#!/bin/sh

. /lib/functions/system.sh
. /usr/share/libubox/jshn.sh

json_init
json_add_string "hostname" "$(cat /proc/sys/kernel/hostname)"
json_add_string "model" "$(cat /tmp/sysinfo/model)"
json_add_string "load" "$(awk '{printf "%s %s %s", $1, $2, $3}' /proc/loadavg)"
json_add_int "uptime" "$(awk '{printf "%d", $1}' /proc/uptime)"
MAC=$(get_mac_label)
if [ -z "${MAC}" ]; then
	grep -q br-lan /proc/net/dev && IF=br-lan || IF=eth0
	MAC=$([ -e /sys/class/net/$IF/address ] && cat /sys/class/net/$IF/address || echo "")
fi
json_add_string "mac" "${MAC}"
json_add_string "software" "$(awk -F= '/^OPENWRT_RELEASE=/ {print $2}' /etc/os-release 2>/dev/null | xargs)"

if [ -e /etc/config/wireless ]; then
	WIRELESSSTATUS=$(ubus call network.wireless status 2>/dev/null)
	for BAND in 2g 5g 6g; do
		CHANNELS=""
		IFNAMES=""
		FILTER=""
		case "$BAND" in
			"2g")
				FILTER='@.config.band="2g" || @.config.hwmode="11g"'
				;;
			"5g")
				FILTER='@.config.band="5g" || @.config.hwmode="11a"'
				;;
			"6g")
				FILTER='@.config.band="6g"'
				;;
		esac
		eval $(echo "$WIRELESSSTATUS" | jsonfilter -q -e 'CHANNELS=@[@.up=true && ('"$FILTER"')].config.channel' -e 'IFNAMES=@[@.up=true && ('"$FILTER"')].interfaces[*].ifname')
		if [ -n "${CHANNELS}" ]; then
			json_add_string "channels${BAND}" "${CHANNELS}"
		fi
		if [ -n "${IFNAMES}" ]; then
			json_add_array "clientslist${BAND}"
			for IFNAME in $IFNAMES; do
				SSID=""
				eval $(echo "$WIRELESSSTATUS" | jsonfilter -q -e 'SSID=@.*.interfaces[@.ifname="'${IFNAME}'"].config.ssid')
				for STATION in $(iw dev "$IFNAME" station dump 2>/dev/null | awk '{if($1 == "Station") {MAC=$2; station[MAC]=1} if($0 ~ /rx bytes:/) {rx[MAC]=$3} if($0 ~ /tx bytes:/) {tx[MAC]=$3} if($0 ~ /^\s*signal:/) {signal[MAC]=$2} if($0 ~ /connected time:/) {connected[MAC]=$3}} END {for (s in station) {printf "%s,%s,%s,%d,%d ", s, rx[s], tx[s], signal[s], connected[s]}}'); do
					set -- $(echo "$STATION" | tr ',' ' ')
					_MAC="$1"
					json_add_object
					json_add_string "ssid" "$SSID"
					json_add_string "mac" "$_MAC"
					json_add_int "tx" "$2"
					json_add_int "rx" "$3"
					json_add_int "signal" "$4"
					json_add_int "connected" "$5"
					T="0"
					grep -qi "^ht supported" /sys/kernel/debug/ieee80211/*/*/stations/${_MAC}/ht_capa 2>/dev/null && T="4"
					grep -qi "^vht supported" /sys/kernel/debug/ieee80211/*/*/stations/${_MAC}/vht_capa 2>/dev/null && T="5"
					grep -qi "^he supported" /sys/kernel/debug/ieee80211/*/*/stations/${_MAC}/he_capa 2>/dev/null && T="6"
					grep -qi "^eht supported" /sys/kernel/debug/ieee80211/*/*/stations/${_MAC}/eht_capa 2>/dev/null && T="7"
					json_add_int "wifi" "$T"
					T=$(awk '/'${_MAC}'/{if($4 == "*"){$4=""};printf "%s %s", $3, $4}' /tmp/dhcp.leases)
					if [ -n "$T" ]; then
						set -- $(echo "$T")
						json_add_string "ipaddr" "$1"
						json_add_string "name" "$2"
					else
						T=$(awk '/0x[26]\s*'${_MAC}'/{printf "%s", $1; exit}' /proc/net/arp)
						json_add_string "ipaddr" "$T"
						json_add_string "name" ""
					fi
					json_close_object
				done
			done
			json_close_array
		fi
	done
fi

json_dump

exit 0
